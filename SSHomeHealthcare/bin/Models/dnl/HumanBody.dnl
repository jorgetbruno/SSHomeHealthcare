add library <%
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
 %>!

//Declaração de tipos de dados!
A AccInfo has a X, Y and Z!
the range of AccInfo's X is Float!
the range of AccInfo's Y is Float!
the range of AccInfo's Z is Float!


//Variável de instância respectiva!
use info with type AccInfo!
use csvFile with type String!
use br with type BufferedReader!
use line with type String!
use csvDivisor with type String!



//Inicialização de Variáveis!
Initialize variables
<%
	 info = new AccInfo();
	 csvFile = "C:/Users/jorge/Documents/ss/falldeteciton.csv";
     br = null;
     line = "";
     csvDivisor = ",";
     try {
	     br = new BufferedReader(new FileReader(csvFile));
	     line = br.readLine();
     } catch (Exception e) {
	        e.printStackTrace();
        
    } 
%>! 

Internal event for s1
<%
try {
        if ((line = br.readLine()) != null) {

         String[] column = line.split(csvDivisor);
                                 
         info = new AccInfo(Float.parseFloat(column[0]), Float.parseFloat(column[0]), Float.parseFloat(column[0]));

        }else {
        if (br != null) {
            try {
                br.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

    } catch (FileNotFoundException e) {
        e.printStackTrace();
    } catch (IOException e) {
        e.printStackTrace();
    } 
%>!

//Maquina de estados!
to start hold in s0 for time 1!
from s0 go to s1!
hold in s1 for time 0.5!
from s1 go to s2!
hold in s2 for time 0.5!
after s2 output AccInfo!
from s2 go to s1!


//Evento de Saida!
//On the transition going out from the state s0, perform the actions!
output event for s2
<%
output.add(outAccInfo, info);
%>!

