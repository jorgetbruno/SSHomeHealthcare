//Declaração de tipos de dados!
A HumanData has a value!
the range of HumanData's value is Float!

A HumanState has a value!
the range of HumanState's value is Integer!

//Variável de instância respectiva!
use estructuredData with type HumanData!
use personState with type HumanState!

//Porta de entrada!
accepts input on HumanData with type HumanData!
accepts input on HumanState with type HumanState!
//enrivonment!
//sense!
//Porta de saida!
generates output on HumanData with type HumanData!
generates output on HumanState with type HumanState!


//Maquina de Estados!
to start passivate in s0!
when in s0 and receive HumanData go to s1!
hold in s1 for time 1!
after s1 output HumanData!
from s1 go to s2!
passivate in s2!
when in s2 and receive HumanData go to s3!
passivate in s3!
when in s3 and receive HumanState go to s4!
hold in s4 for time 1!
after s4 output HumanState!
from s4 go to s0!

//Evento de Entrada!
external event for s0 with HumanData
<%
estructuredData = (HumanData) messageList.get(0).getData();
%>!
external event for s4 with HumanState
<%
temporaryState = (HumanState) messageList.get(0).getData();
if(temporaryState.getValue() < 36.6){
	 passivateIn("s0");
}

personState = temporaryState;

%>!
//On the transition going out from the state,perform the actions
output event for s1
<%
output.add(outHumanData, estructuredData);
%>!
output event for s4
<%
output.add(outHumanState, personState);
%>!