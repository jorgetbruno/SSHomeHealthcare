//Declaração de tipos de dados!
A HumanData has a speed, distance, X, Y and Z!
the range of HumanData's speed is Float!
the range of HumanData's distance is Float!
the range of HumanData's X is Float!
the range of HumanData's Y is Float!
the range of HumanData's Z is Float!

A AccInfo has a X, Y and Z!
the range of AccInfo's X is Float!
the range of AccInfo's Y is Float!
the range of AccInfo's Z is Float!

//Variável de instância respectiva!
use accData with type AccInfo!
use estructuredData with type HumanData!
use radarData with type RadarInfo!

//Porta de entrada!
accepts input on AccInfo with type AccInfo!
accepts input on HumanData with type HumanData!
accepts input on RadarInfo with type RadarInfo!

//Porta de saida!
generates output on AccInfo with type AccInfo!
generates output on HumanData with type HumanData!
generates output on RadarInfo with type RadarInfo!
 
Initialize variables
<%
estructuredData = new HumanData();
%>! 

//Maquina de Estados!
to start passivate in s0!
when in s0 and receive AccInfo go to s1!
hold in s1 for time 1!
after s1 output AccInfo!
from s1 go to s2!
passivate in s2!
when in s2 and receive RadarInfo go to s3!
hold in s3 for time 1!
after s3 output RadarInfo!
from s3 go to s4!
passivate in s4!
when in s4 and receive HumanData go to s5!
hold in s5 for time 1!
after s5 output HumanData!
from s5 go to s0!

//Evento de Entrada!
external event for s0 with AccInfo
<%
accData = (AccInfo) messageList.get(0).getData();
%>!
external event for s2 with RadarInfo
<%
radarData = (RadarInfo) messageList.get(0).getData();
%>!
//On the transition going out from the state,perform the actions
output event for s1
<%
output.add(outAccInfo, accData);
%>!
output event for s3
<%
output.add(outRadarInfo, radarData);
%>!
output event for s5
<%
output.add(outHumanData, estructuredData);
%>!